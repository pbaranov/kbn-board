require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe TicketsController  do

  before(:each) do
  	back = :'http://test.com/sessions/new'
    @request.env['HTTP_REFERER'] = back.to_s
  	
  end

  def mock_ticket(stubs={})
    @mock_ticket ||= mock_model(Ticket, stubs).as_null_object
  end

  def mock_category(stubs={})
  	@mock_category ||= mock_model(Category, stubs).as_null_object
  end
  
  describe "GET show" do
    it "assigns the requested ticket as @ticket" do
      Ticket.stub(:find).with("37") { mock_ticket }
      get :show, :id => "37"
      assigns(:ticket).should be(mock_ticket)
    end
  end

  #describe "GET new" do
   # it "assigns a new ticket as @ticket" do
    #  Ticket.stub(:new) { mock_ticket }
    #  get :new
    #  assigns(:ticket).should be(mock_ticket)
   # end
  #end

  describe "GET edit" do
    it "assigns the requested ticket as @ticket" do
      Ticket.stub(:find).with("37") { mock_ticket }
      get :edit, :id => "37"
      assigns(:ticket).should be(mock_ticket)
    end
  end

  describe "PUT create" do
  	 describe "with valid params" do
      it "assigns a newly created ticket as @ticket" do

        Ticket.stub(:new).with({'these' => 'params'},'37') { mock_ticket(:save => true) }
        post :create, :ticket => {'these' => 'params'},:category_id=>"37"
        assigns(:ticket).should be(mock_ticket)
      end
     end
  end
  
  describe "DELETE destroy" do
    it "destroys the requested ticket" do
      Ticket.stub(:find).with("37") { mock_ticket }
      mock_ticket.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the tickets list" do
      Ticket.stub(:find) { mock_ticket }
      delete :destroy, :id => "1"
      response.should redirect_to(:back)
    end
  end

end
